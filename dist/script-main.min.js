/* Uglifying all js files */

class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(e){dbPromise.then(function(e){return e.transaction("restaurants").objectStore("restaurants").getAll()}).then(function(t){0==t.length?fetch(DBHelper.DATABASE_URL).then(function(t){if(t.ok)t.json().then(function(t){e(null,t)});else{const r=`Request failed. Returned status of ${t.status}`;e(r,null)}}):e(null,t)})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((r,n)=>{if(r)t(r,null);else{const r=n.find(t=>t.id==e);r?t(null,r):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((r,n)=>{if(r)t(r,null);else{const r=n.filter(t=>t.cuisine_type==e);t(null,r)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((r,n)=>{if(r)t(r,null);else{const r=n.filter(t=>t.neighborhood==e);t(null,r)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,r){DBHelper.fetchRestaurants((n,a)=>{if(n)r(n,null);else{let n=a;"all cuisines"!=e&&(n=n.filter(t=>t.cuisine_type==e)),"all neighborhoods"!=t&&(n=n.filter(e=>e.neighborhood==t)),r(null,n)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,r)=>{if(t)e(t,null);else{const t=r.map((e,t)=>r[t].neighborhood),n=t.filter((e,r)=>t.indexOf(e)==r);e(null,n)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,r)=>{if(t)e(t,null);else{const t=r.map((e,t)=>r[t].cuisine_type),n=t.filter((e,r)=>t.indexOf(e)==r);e(null,n)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph}`}static imageSourceLargeForRestaurant(e){let t=e.photograph;return void 0!=t&&(t=`/img/${t=t.replace(".jpg","")}-800_large_2x.jpg 2x, /img/${t}-800_large_1x.jpg`),t}static imageSourceMediumForRestaurant(e){let t=e.photograph;return void 0!=t&&(t=`/img/${t=t.replace(".jpg","")}-600_medium_2x.jpg 2x, /img/${t}-600_medium_1x.jpg`),t}static imageAltText(e){return e.photo_alt}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}var dbPromise=idb.open("test-db",1,function(e){e.createObjectStore("restaurants",{keyPath:"id"})});let restaurants,neighborhoods,cuisines,map;dbPromise.then(function(e){return DBHelper.fetchRestaurants(function(t,r){var n=e.transaction("restaurants","readwrite"),a=n.objectStore("restaurants");return r.forEach(e=>a.put(e)),n.complete})}).then(function(){});let markers=[];registerServiceWorker=(()=>{"serviceWorker"in navigator?navigator.serviceWorker.register("/sw.js").then(e=>{console.log("Service worker registration succeeded:",e)},e=>{console.log("Service worker registration failed:",e)}):console.log("Service workers are not supported.")}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const r=document.createElement("option");r.innerHTML=e,r.value=e,t.append(r)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const r=document.createElement("option");r.innerHTML=e,r.value=e,t.append(r)})}),initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1,title:"Restaurant reviews for New York City"}),updateRestaurants()}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),r=e.selectedIndex,n=t.selectedIndex,a=e[r].value,s=t[n].value;e.setAttribute("aria-activedescendant",a),t.setAttribute("aria-activedescendant",s),DBHelper.fetchRestaurantByCuisineAndNeighborhood(a,s,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers&&self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),navigator.onLine&&addMarkersToMap()}),createRestaurantHTML=(e=>{const t=document.createElement("li"),r=document.createElement("picture"),n=document.createElement("source");n.media="(min-width: 960px)",n.srcset=DBHelper.imageSourceLargeForRestaurant(e);const a=document.createElement("source");a.media="(max-width: 960px)",a.srcset=DBHelper.imageSourceMediumForRestaurant(e);const s=document.createElement("img");s.className="restaurant-img",s.src=DBHelper.imageUrlForRestaurant(e),s.alt=DBHelper.imageAltText(e),r.append(n),r.append(a),r.append(s),t.append(r);const o=document.createElement("h2"),i=document.createElement("a");i.className="restaurant-link",i.innerHTML=e.name,i.href=DBHelper.urlForRestaurant(e),o.append(i),t.append(o);const l=document.createElement("p");l.innerHTML=e.neighborhood,t.append(l);const c=document.createElement("p");return c.innerHTML=e.address,t.append(c),t}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})}),document.addEventListener("DOMContentLoaded",e=>{if(fetchNeighborhoods(),fetchCuisines(),registerServiceWorker(),navigator.onLine){const e=document.createElement("script");e.src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDEzTdwKnrAUxK8CHLf8lWcDC-dgI3QiYk&libraries=places&callback=initMap",e.async=!1,e.defer=!0,document.head.appendChild(e)}else updateRestaurants()});