/* Uglifying all js files */

class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static get DATABASE_REVIEWS_URL(){return"http://localhost:1337/reviews"}static updateFavorite(e,t){let s="",r="";console.log(t),console.log(e),!1===e?(s=DBHelper.DATABASE_URL+"/"+t+"/?is_favorite=true",r={is_favorite:!0}):(s=DBHelper.DATABASE_URL+"/"+t+"/?is_favorite=false",r={is_favorite:!1});const n=new Request(s,{method:"POST",body:r});fetch(n).then(function(e){e.ok&&e.json().then(function(e){console.log(e);const s=document.getElementById("star-"+t);"true"==e.is_favorite?(s.classList.remove("far"),s.classList.add("fas"),updateRestaurant(e)):(s.classList.remove("fas"),s.classList.add("far"),updateRestaurant(e))})})}static addReview(e,t){let s=DBHelper.DATABASE_REVIEWS_URL+"/?restaurant_id="+t;console.log(e),console.log(t);const r=new Request(s,{method:"POST",body:e});fetch(r).then(function(t){t.ok&&t.json().then(function(t){t.comments=e.comments,t.name=e.name,t.rating=e.rating,t.restaurant_id=e.restaurant_id,console.log(t),dbPromise.then(function(e){var s=e.transaction("reviews","readwrite");return s.objectStore("reviews").put(t),s.complete}).then(()=>{console.log("Review added")})})})}static fetchFavorites(e){fetch(DBHelper.DATABASE_URL+"/?is_favorite=true").then(function(e){if(e.ok)e.json().then(function(e){return e});else{e.status}})}static fetchRestaurants(e){dbPromise.then(function(e){return e.transaction("restaurants").objectStore("restaurants").getAll()}).then(function(t){0==t.length?fetch(DBHelper.DATABASE_URL).then(function(t){if(t.ok)t.json().then(function(t){e(null,t)});else{const s=`Request failed. Returned status of ${t.status}`;e(s,null)}}):e(null,t)})}static fetchReviews(e){dbPromise.then(function(e){return e.transaction("reviews").objectStore("reviews").getAll()}).then(function(t){0==t.length?fetch(DBHelper.DATABASE_REVIEWS_URL).then(function(t){if(t.ok)t.json().then(function(t){e(null,t)});else{const s=`Request failed. Returned status of ${t.status}`;e(s,null)}}):e(null,t)})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((s,r)=>{if(s)t(s,null);else{const s=r.find(t=>t.id==e);s?t(null,s):t("Restaurant does not exist",null)}})}static fetchReviewsById(e,t){DBHelper.fetchReviews((s,r)=>{if(s)t(s,null);else{const s=r.filter(t=>t.restaurant_id==e);s?t(null,s):t("Reviews do not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((s,r)=>{if(s)t(s,null);else{const s=r.filter(t=>t.cuisine_type==e);t(null,s)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((s,r)=>{if(s)t(s,null);else{const s=r.filter(t=>t.neighborhood==e);t(null,s)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,s){DBHelper.fetchRestaurants((r,n)=>{if(r)s(r,null);else{let r=n;"all cuisines"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all neighborhoods"!=t&&(r=r.filter(e=>e.neighborhood==t)),s(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,s)=>{if(t)e(t,null);else{const t=s.map((e,t)=>s[t].neighborhood),r=t.filter((e,s)=>t.indexOf(e)==s);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,s)=>{if(t)e(t,null);else{const t=s.map((e,t)=>s[t].cuisine_type),r=t.filter((e,s)=>t.indexOf(e)==s);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph}`}static imageSourceLargeForRestaurant(e){let t=e.photograph;return void 0!=t&&(t=`/img/${t=t.replace(".jpg","")}-800_large_2x.jpg 2x, /img/${t}-800_large_1x.jpg`),t}static imageSourceMediumForRestaurant(e){let t=e.photograph;return void 0!=t&&(t=`/img/${t=t.replace(".jpg","")}-600_medium_2x.jpg 2x, /img/${t}-600_medium_1x.jpg`),t}static imageAltText(e){return e.photo_alt}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}let dbPromise=idb.open("test-db",1,e=>{e.createObjectStore("restaurants",{keyPath:"id"}),e.createObjectStore("reviews",{keyPath:"id"})});dbPromise.then(e=>DBHelper.fetchRestaurants((t,s)=>{let r=e.transaction("restaurants","readwrite"),n=r.objectStore("restaurants");return s.forEach(e=>n.put(e)),r.complete})).then(()=>{console.log("Restaurants added")}),dbPromise.then(e=>DBHelper.fetchReviews((t,s)=>{let r=e.transaction("reviews","readwrite"),n=r.objectStore("reviews");return s.forEach(e=>n.put(e)),r.complete})).then(()=>{console.log("Reviews added")});let restaurants,neighborhoods,cuisines,map,updateRestaurant=e=>{dbPromise.then(t=>{let s=t.transaction("restaurants","readwrite");return s.objectStore("restaurants").put(e),s.complete}).then(()=>{console.log("Restaurant "+e.id+" updated. Favorite is "+e.is_favorite)})},markers=[];registerServiceWorker=(()=>{"serviceWorker"in navigator?navigator.serviceWorker.register("/sw.js").then(e=>{console.log("Service worker registration succeeded:",e)},e=>{console.log("Service worker registration failed:",e)}):console.log("Service workers are not supported.")}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1,title:"Restaurant reviews for New York City"}),updateRestaurants()}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),s=e.selectedIndex,r=t.selectedIndex,n=e[s].value,a=t[r].value;e.setAttribute("aria-activedescendant",n),t.setAttribute("aria-activedescendant",a),DBHelper.fetchRestaurantByCuisineAndNeighborhood(n,a,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers&&self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),navigator.onLine&&addMarkersToMap()}),createRestaurantHTML=(e=>{const t=document.createElement("li");t.id=e.id;const s=document.createElement("picture"),r=document.createElement("source");r.media="(min-width: 960px)",r.srcset=DBHelper.imageSourceLargeForRestaurant(e);const n=document.createElement("source");n.media="(max-width: 960px)",n.srcset=DBHelper.imageSourceMediumForRestaurant(e);const a=document.createElement("img");a.className="restaurant-img",a.src=DBHelper.imageUrlForRestaurant(e),a.alt=DBHelper.imageAltText(e),s.append(r),s.append(n),s.append(a),t.append(s);const o=document.createElement("h2"),i=document.createElement("a");i.className="restaurant-link",i.innerHTML=e.name,i.href=DBHelper.urlForRestaurant(e);const l=document.createElement("i");l.id="star-"+e.id,l.dataset.id=e.id,l.classList.add("fa-star","fa-style"),e.isFavorite?l.classList.add("fas"):l.classList.add("far"),l.addEventListener("click",function(){const e=this.classList.contains("fas"),t=this.dataset.id;DBHelper.updateFavorite(e,t)}),o.append(i),o.append(l),t.append(o);const c=document.createElement("p");c.innerHTML=e.neighborhood,t.append(c);const u=document.createElement("p");return u.innerHTML=e.address,t.append(u),t}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})}),document.addEventListener("DOMContentLoaded",e=>{if(fetchNeighborhoods(),fetchCuisines(),registerServiceWorker(),navigator.onLine){const e=document.createElement("script");e.src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDEzTdwKnrAUxK8CHLf8lWcDC-dgI3QiYk&libraries=places&callback=initMap",e.async=!1,e.defer=!0,document.head.appendChild(e)}else updateRestaurants()});