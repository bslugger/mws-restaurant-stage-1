/* Uglifying all js files */

class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static get DATABASE_REVIEWS_URL(){return"http://localhost:1337/reviews"}static updateFavorite(e,t){let n="",r="";console.log(t),console.log(e),!1===e?(n=DBHelper.DATABASE_URL+"/"+t+"/?is_favorite=true",r={is_favorite:!0}):(n=DBHelper.DATABASE_URL+"/"+t+"/?is_favorite=false",r={is_favorite:!1});const a=new Request(n,{method:"POST",body:r});fetch(a).then(function(e){e.ok&&e.json().then(function(e){console.log(e);const n=document.getElementById("star-"+t);"true"==e.is_favorite?(n.classList.remove("far"),n.classList.add("fas"),updateRestaurant(e)):(n.classList.remove("fas"),n.classList.add("far"),updateRestaurant(e))})})}static addReview(e,t){let n=DBHelper.DATABASE_REVIEWS_URL+"/?restaurant_id="+t;console.log(e),console.log(t);const r=new Request(n,{method:"POST",body:e});fetch(r).then(function(t){t.ok&&t.json().then(function(t){t.comments=e.comments,t.name=e.name,t.rating=e.rating,t.restaurant_id=e.restaurant_id,console.log(t),dbPromise.then(function(e){var n=e.transaction("reviews","readwrite");return n.objectStore("reviews").put(t),n.complete}).then(()=>{console.log("Review added")})})})}static fetchFavorites(e){fetch(DBHelper.DATABASE_URL+"/?is_favorite=true").then(function(e){if(e.ok)e.json().then(function(e){return e});else{e.status}})}static fetchRestaurants(e){dbPromise.then(function(e){return e.transaction("restaurants").objectStore("restaurants").getAll()}).then(function(t){0==t.length?fetch(DBHelper.DATABASE_URL).then(function(t){if(t.ok)t.json().then(function(t){e(null,t)});else{const n=`Request failed. Returned status of ${t.status}`;e(n,null)}}):e(null,t)})}static fetchReviews(e){dbPromise.then(function(e){return e.transaction("reviews").objectStore("reviews").getAll()}).then(function(t){0==t.length?fetch(DBHelper.DATABASE_REVIEWS_URL).then(function(t){if(t.ok)t.json().then(function(t){e(null,t)});else{const n=`Request failed. Returned status of ${t.status}`;e(n,null)}}):e(null,t)})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.find(t=>t.id==e);n?t(null,n):t("Restaurant does not exist",null)}})}static fetchReviewsById(e,t){DBHelper.fetchReviews((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.restaurant_id==e);n?t(null,n):t("Reviews do not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((r,a)=>{if(r)n(r,null);else{let r=a;"all cuisines"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all neighborhoods"!=t&&(r=r.filter(e=>e.neighborhood==t)),n(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph}`}static imageSourceLargeForRestaurant(e){let t=e.photograph;return void 0!=t&&(t=`/img/${t=t.replace(".jpg","")}-800_large_2x.jpg 2x, /img/${t}-800_large_1x.jpg`),t}static imageSourceMediumForRestaurant(e){let t=e.photograph;return void 0!=t&&(t=`/img/${t=t.replace(".jpg","")}-600_medium_2x.jpg 2x, /img/${t}-600_medium_1x.jpg`),t}static imageAltText(e){return e.photo_alt}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}let dbPromise=idb.open("test-db",1,e=>{e.createObjectStore("restaurants",{keyPath:"id"}),e.createObjectStore("reviews",{keyPath:"id"})});dbPromise.then(e=>DBHelper.fetchRestaurants((t,n)=>{let r=e.transaction("restaurants","readwrite"),a=r.objectStore("restaurants");return n.forEach(e=>a.put(e)),r.complete})).then(()=>{console.log("Restaurants added")}),dbPromise.then(e=>DBHelper.fetchReviews((t,n)=>{let r=e.transaction("reviews","readwrite"),a=r.objectStore("reviews");return n.forEach(e=>a.put(e)),r.complete})).then(()=>{console.log("Reviews added")});let restaurant,reviews,reviewForm,updateRestaurant=e=>{dbPromise.then(t=>{let n=t.transaction("restaurants","readwrite");return n.objectStore("restaurants").put(e),n.complete}).then(()=>{console.log("Restaurant "+e.id+" updated. Favorite is "+e.is_favorite)})};window.initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1,title:"Restaurant listing for "+t.name}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map),self.map.data.getMap().title="Restaurant listing for "+t.name)})}),window.onload=(()=>{document.getElementById("restaurant-name").focus()}),registerServiceWorker=(()=>{"serviceWorker"in navigator?navigator.serviceWorker.register("/sw.js").then(e=>{console.log("Service worker registration succeeded:",e)},e=>{console.log("Service worker registration failed:",e)}):console.log("Service workers are not supported.")}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?(DBHelper.fetchRestaurantById(t,(t,n)=>{self.restaurant=n,n?(fillRestaurantHTML(),e(null,n)):console.error(t)}),DBHelper.fetchReviewsById(t,(t,n)=>{self.reviews=n,n?(fillReviewsHTML(),e(null,n)):console.error(t)})):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.createElement("picture"),n=document.createElement("source");n.media="(min-width: 960px)",n.srcset=DBHelper.imageSourceLargeForRestaurant(e);const r=document.createElement("source");r.media="(max-width: 960px)",r.srcset=DBHelper.imageSourceMediumForRestaurant(e);const a=document.getElementById("restaurant-img");a.className="restaurant-img",a.src=DBHelper.imageUrlForRestaurant(e),a.alt=DBHelper.imageAltText(e),t.append(n),t.append(r),t.append(a);const s=document.getElementById("restaurant-cuisine");s.innerHTML=e.cuisine_type,document.getElementById("restaurant-container").insertBefore(t,s),e.operating_hours&&fillRestaurantHoursHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const r=document.createElement("tr"),a=document.createElement("td");a.innerHTML=n,r.appendChild(a);const s=document.createElement("td");s.innerHTML=e[n],r.appendChild(s),t.appendChild(r)}}),fillReviewsHTML=((e=self.reviews)=>{const t=document.getElementById("reviews-container"),n=document.createElement("h2");if(n.innerHTML="Reviews",t.appendChild(n),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const r=document.getElementById("reviews-list");e.forEach(e=>{r.appendChild(createReviewHTML(e))}),t.appendChild(r);const a=document.getElementById("review-form-container");a.parentNode.removeChild(a),t.appendChild(a),document.getElementById("submit-button").addEventListener("click",()=>{const e=document.getElementById("reviewer-name").value,t=document.getElementById("rating").value,n=document.getElementById("review-textarea").value;reviewForm={restaurant_id:self.restaurant.id,name:e,rating:t,comments:n};const a=createReviewHTML(reviewForm);r.appendChild(a),"online"==(navigator.onLine?"online":"offline")&&DBHelper.addReview(reviewForm,self.restaurant.id)}),window.addEventListener("online",()=>{DBHelper.addReview(reviewForm,self.restaurant.id)})}),createReviewHTML=(e=>{const t=document.createElement("li"),n=document.createElement("p");n.innerHTML=e.name,t.appendChild(n);const r=document.createElement("p");r.innerHTML=new Date(e.updatedAt),t.appendChild(r);const a=document.createElement("p");a.innerHTML=`Rating: ${e.rating}`,t.appendChild(a);const s=document.createElement("p");return s.innerHTML=e.comments,t.appendChild(s),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,n.setAttribute("aria-current","page"),t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}),document.addEventListener("DOMContentLoaded",e=>{if(registerServiceWorker(),navigator.onLine){const e=document.createElement("script");e.src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDEzTdwKnrAUxK8CHLf8lWcDC-dgI3QiYk&libraries=places&callback=initMap",e.async=!1,e.defer=!0,document.head.appendChild(e)}else fetchRestaurantFromURL((e,t)=>{e?console.error(e):fillBreadcrumb()})});